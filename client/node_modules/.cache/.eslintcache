[{"/Users/bc/Documents/Coding/Lehman/CMP 464/Homework/HW5/client/src/index.js":"1","/Users/bc/Documents/Coding/Lehman/CMP 464/Homework/HW5/client/src/reportWebVitals.js":"2","/Users/bc/Documents/Coding/Lehman/CMP 464/Homework/HW5/client/src/App.js":"3","/Users/bc/Documents/Coding/Lehman/CMP 464/Homework/HW5/client/src/components/LinkContainer.js":"4","/Users/bc/Documents/Coding/Lehman/CMP 464/Homework/HW5/client/src/components/Table.js":"5","/Users/bc/Documents/Coding/Lehman/CMP 464/Homework/HW5/client/src/components/Form.js":"6","/Users/bc/Documents/Coding/Lehman/CMP 464/Final Project/client/src/index.js":"7","/Users/bc/Documents/Coding/Lehman/CMP 464/Final Project/client/src/reportWebVitals.js":"8","/Users/bc/Documents/Coding/Lehman/CMP 464/Final Project/client/src/App.js":"9","/Users/bc/Documents/Coding/Lehman/CMP 464/Final Project/client/src/components/LinkContainer.js":"10","/Users/bc/Documents/Coding/Lehman/CMP 464/Final Project/client/src/components/Table.js":"11","/Users/bc/Documents/Coding/Lehman/CMP 464/Final Project/client/src/components/Form.js":"12"},{"size":500,"mtime":1684656947520,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1684656947521,"results":"15","hashOfConfig":"14"},{"size":610,"mtime":1684794133754,"results":"16","hashOfConfig":"14"},{"size":1877,"mtime":1684803051453,"results":"17","hashOfConfig":"14"},{"size":988,"mtime":1684800623187,"results":"18","hashOfConfig":"14"},{"size":906,"mtime":1684801656790,"results":"19","hashOfConfig":"14"},{"size":500,"mtime":1684850612240,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1684850612240,"results":"22","hashOfConfig":"21"},{"size":472,"mtime":1684856878676,"results":"23","hashOfConfig":"21"},{"size":2147,"mtime":1684856640304,"results":"24","hashOfConfig":"21"},{"size":1456,"mtime":1684857098351,"results":"25","hashOfConfig":"21"},{"size":1587,"mtime":1684855847282,"results":"26","hashOfConfig":"21"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hn3pub",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17qds2f",{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},"/Users/bc/Documents/Coding/Lehman/CMP 464/Homework/HW5/client/src/index.js",[],[],"/Users/bc/Documents/Coding/Lehman/CMP 464/Homework/HW5/client/src/reportWebVitals.js",[],[],"/Users/bc/Documents/Coding/Lehman/CMP 464/Homework/HW5/client/src/App.js",["68","69"],[],"import React from 'react'\nimport LinkContainer from './components/LinkContainer'\nimport {useEffect, useState} from 'react'\n\nfunction App() {\n  /*\n  const [message, setMessage] = useState(null) \n\n  const fetchAPI = async () => {\n    try {\n      let response = await fetch('/api')\n      let data = await response.json()\n      setMessage(data.message)\n    } catch(error) {\n      console.log(error)\n    }\n  }\n  useEffect(() => {\n    // perform API request\n    // use fetch to get our data\n    fetchAPI()\n  }, [])\n*/\n  return (\n    <div className=\"App\">\n      <LinkContainer />\n    </div>\n  )\n}\n\nexport default App\n","/Users/bc/Documents/Coding/Lehman/CMP 464/Homework/HW5/client/src/components/LinkContainer.js",["70"],[],"// /client/LinkContainer.js\n\nimport {React, useState, useEffect } from 'react'\nimport Table from './Table';\nimport Form from './Form';\n\nconst LinkContainer = (props) => {\n  const [links,setLinks] = useState(null);\n\n  const fetchLinks = async () => {\n    try {\n      let response = await fetch(\"/links\")\n      console.log(response)\n      let data = await response.json()\n      setLinks(data)\n      console.log(data)\n    } catch(error) {\n      console.log(error)\n    }\n  }\n  const postLink = async (newLink) => {\n    try {\n      let response = await fetch('/links' , {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newLink)\n      })\n      console.log(response)\n      let message = await response.text()\n      console.log(message)\n    } catch(error) {\n      console.log(error)\n    }\n  }\n  const deleteLink = async (id) => {\n    try {\n      let response = await fetch(`/links/${id}`, {\n        method: 'DELETE',\n      })\n      console.log(response)\n      let message = await response.text()\n      console.log(message)\n    } catch(error) {\n      console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    if (links == null) {\n      fetchLinks()\n    }\n  }, [])\n\n  const handleRemove = (index) => {\n    const updatedLinks = links.filter((_,i) => i !== index);\n    setLinks(updatedLinks);\n    deleteLink(links[index].id)\n  }\n\n  const handleSubmit = async (favLink) => {\n\n    // save data to postgres\n    postLink(favLink)\n\n    // pull latest data from postgres\n    fetchLinks()\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>My Favorite Links</h1>\n      <p>Add a new url with a name and link to the table.</p>\n      <Table linkData={links} removeLink={handleRemove} />\n\n      <br />\n\n      <h3>Add New</h3>\n      <Form handleSubmit={handleSubmit} />\n    </div>\n  )\n}\n\nexport default LinkContainer\n","/Users/bc/Documents/Coding/Lehman/CMP 464/Homework/HW5/client/src/components/Table.js",["71"],[],"// /client/Table.js\n\nimport React from 'react'\n\nconst TableHeader = () => {\n  // boilerplate table header functional component\n  return (\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>URL</th>\n        <th>Remove</th>\n      </tr>\n    </thead>\n  )\n}\n\nconst TableBody = (props) => {\n  // boilerplate table body functional component\n  // we use Array.map to create table rows from LinkData passed via props\n  const rows = props.linkData.map((row, index) => {\n    return (\n      <tr key={index}>\n        <td>{row.name}</td>\n        <td>\n          <a href={row.url}>{row.url}</a>\n        </td>\n        <td>\n          <button onClick={() => props.removeLink(index)}>Delete</button>\n        </td>\n      </tr>\n    )\n  })\n\n  return <tbody>{rows}</tbody>\n}\n\nconst Table = (props) => {\n  {\n    return (\n    <table>\n      <TableHeader />\n      <TableBody linkData={props.linkData ? props.linkData : []} \n      removeLink={props.removeLink} />\n    </table>\n    )\n  }\n}\n\nexport default Table\n","/Users/bc/Documents/Coding/Lehman/CMP 464/Homework/HW5/client/src/components/Form.js",[],[],"/Users/bc/Documents/Coding/Lehman/CMP 464/Final Project/client/src/index.js",[],[],"/Users/bc/Documents/Coding/Lehman/CMP 464/Final Project/client/src/reportWebVitals.js",[],[],"/Users/bc/Documents/Coding/Lehman/CMP 464/Final Project/client/src/App.js",[],[],"/Users/bc/Documents/Coding/Lehman/CMP 464/Final Project/client/src/components/LinkContainer.js",["72"],[],"// /client/LinkContainer.js\n\nimport {React, useState, useEffect } from 'react'\nimport { Typography } from '@mui/material';\nimport Table from './Table';\nimport Form from './Form';\n\nconst LinkContainer = (props) => {\n  const [links,setLinks] = useState(null);\n\n  const fetchLinks = async () => {\n    try {\n      let response = await fetch(\"/links\")\n      console.log(response)\n      let data = await response.json()\n      setLinks(data)\n      console.log(data)\n    } catch(error) {\n      console.log(error)\n    }\n  }\n  const postLink = async (newLink) => {\n    try {\n      let response = await fetch('/links' , {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newLink)\n      })\n      console.log(response)\n      let message = await response.text()\n      console.log(message)\n    } catch(error) {\n      console.log(error)\n    }\n  }\n  const deleteLink = async (id) => {\n    try {\n      let response = await fetch(`/links/${id}`, {\n        method: 'DELETE',\n      })\n      console.log(response)\n      let message = await response.text()\n      console.log(message)\n    } catch(error) {\n      console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    if (links == null) {\n      fetchLinks()\n    }\n  }, [])\n\n  const handleRemove = (index) => {\n    const updatedLinks = links.filter((_,i) => i !== index);\n    setLinks(updatedLinks);\n    deleteLink(links[index].id)\n  }\n\n  const handleSubmit = async (favLink) => {\n\n    // save data to postgres\n    postLink(favLink)\n\n    // pull latest data from postgres\n    fetchLinks()\n    console.log(favLink)\n  }\n\n  return (\n    <div className=\"container\">\n      <Typography variant=\"h2\" component=\"div\" gutterBottom>\n        My Favorite Links\n      </Typography>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        Add a new url with a name and link to the table.\n      </Typography>\n      <Table linkData={links} removeLink={handleRemove} />\n\n      <Typography variant=\"h5\" component=\"div\" gutterBottom>\n        Add New\n      </Typography>\n      <Form handleSubmit={handleSubmit} />\n    </div>\n  )\n}\n\nexport default LinkContainer\n","/Users/bc/Documents/Coding/Lehman/CMP 464/Final Project/client/src/components/Table.js",[],[],"/Users/bc/Documents/Coding/Lehman/CMP 464/Final Project/client/src/components/Form.js",["73"],[],"// /client/Form.js\n\nimport React, { useState } from 'react';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\n\nconst Form = (props) => {\n  const [name, setName] = useState('');\n  const [url, setURL] = useState('');\n  const [category, setCategory] = useState('');\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    if (name === 'name') setName(value);\n    if (name === 'url') setURL(value);\n    if (name == 'category') setCategory(value);\n  }\n\n  const onFormSubmit = (event) => {\n    // to prevent page reload on form submit\n    event.preventDefault()\n    props.handleSubmit({ name, url, category});\n    setName('');\n    setURL('');\n    setCategory('');\n  }\n\n  return (\n    <form onSubmit={onFormSubmit} style={{ marginBottom: '2em' }}>\n      <TextField \n        id=\"name\" \n        label=\"Name\" \n        value={name} \n        onChange={handleChange} \n        name=\"name\"\n        variant=\"outlined\"\n        style={{ marginRight: '1em' }}\n      />\n      <TextField \n        id=\"url\" \n        label=\"URL\" \n        value={url} \n        onChange={handleChange} \n        name=\"url\"\n        variant=\"outlined\"\n        style={{ marginRight: '1em' }}\n      />\n      <TextField \n        id=\"category\" \n        label=\"Category\" \n        value={category} \n        onChange={handleChange} \n        name=\"category\"\n        variant=\"outlined\"\n        style={{ marginRight: '1em' }}\n      />\n      <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n        Add Link\n      </Button>\n    </form>\n  )\n}\n\nexport default Form\n",{"ruleId":"74","severity":1,"message":"75","line":3,"column":9,"nodeType":"76","messageId":"77","endLine":3,"endColumn":18},{"ruleId":"74","severity":1,"message":"78","line":3,"column":20,"nodeType":"76","messageId":"77","endLine":3,"endColumn":28},{"ruleId":"79","severity":1,"message":"80","line":54,"column":6,"nodeType":"81","endLine":54,"endColumn":8,"suggestions":"82"},{"ruleId":"83","severity":1,"message":"84","line":39,"column":3,"nodeType":"85","messageId":"86","endLine":47,"endColumn":4},{"ruleId":"79","severity":1,"message":"80","line":55,"column":6,"nodeType":"81","endLine":55,"endColumn":8,"suggestions":"87"},{"ruleId":"88","severity":1,"message":"89","line":16,"column":14,"nodeType":"90","messageId":"91","endLine":16,"endColumn":16},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'links'. Either include it or remove the dependency array.","ArrayExpression",["92"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock",["93"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"desc":"94","fix":"95"},{"desc":"94","fix":"96"},"Update the dependencies array to be: [links]",{"range":"97","text":"98"},{"range":"99","text":"98"},[1228,1230],"[links]",[1272,1274]]